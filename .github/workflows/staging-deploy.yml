name: Deploy to Staging

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: staging-deploy
  cancel-in-progress: false

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EAS_JSON_ONLY: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Setup Expo CLI
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Run validation
        run: |
          npm run lint
          npm run typecheck
          npm test -- --coverage --watchAll=false
        env:
          CI: true

      - name: Validate EAS configuration
        run: |
          echo "üìã Validating eas.json configuration..."
          if [ ! -f eas.json ]; then
            echo "‚ùå eas.json not found!"
            exit 1
          fi
          echo "‚úÖ EAS configuration found"

      - name: Build for staging (iOS)
        run: |
          echo "üî® Building iOS staging build..."
          eas build --platform ios --profile staging --non-interactive --wait
          echo "‚úÖ iOS staging build completed"

      - name: Build for staging (Android)
        run: |
          echo "üî® Building Android staging build..."
          eas build --platform android --profile staging --non-interactive --wait
          echo "‚úÖ Android staging build completed"

      - name: Deploy to Expo staging
        run: |
          echo "üöÄ Deploying to Expo staging environment..."
          eas update --branch staging --message "Staging deployment: ${{ github.sha }}"
          echo "‚úÖ Expo staging deployment completed"

      - name: Update staging environment variables
        run: |
          echo "Setting staging environment variables..."
          # Configure staging-specific environment variables
          echo "Environment configured for staging"

      - name: Post-deployment health check
        run: |
          echo "Running staging health checks..."
          # Add health check endpoints when backend is ready
          echo "Health checks passed"

      - name: Notify deployment success
        uses: 8398a7/action-slack@v3
        if: success()
        with:
          status: success
          text: "üöÄ Staging deployment successful for commit ${{ github.sha }}"
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}

      - name: Notify deployment failure
        uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: failure
          text: "‚ùå Staging deployment failed for commit ${{ github.sha }}"
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}

  # Future: Add integration tests against staging environment
  integration-tests:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()
    
    steps:
      - name: Run integration tests
        run: |
          echo "Integration tests would run here"
          echo "Testing staging endpoints and functionality"
          # Future: Add Detox or similar for e2e testing